{"version":3,"file":"static/js/638.7bb57f8b.chunk.js","mappings":"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","sources":["hooks/useFetchMovieInfo.js","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MoviesDetailsPage/MoviesDetailsPage.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieById } from 'fetchAPI/fetchAPI';\n\nexport const useFetchMovieInfo = (endpoint = '') => {\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getMovie = async movieId => {\n      setIsLoading(true);\n      try {\n        const movieDetails = await fetchMovieById(movieId, endpoint);\n        setMovieInfo(movieDetails);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getMovie(id);\n  }, [id, endpoint]);\n\n  return { movieInfo, isLoading, error };\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  color: ${p => p.theme.colors.white};\n  background-color: ${p => p.theme.colors.primary};\n  border: none;\n  font-size: 16px;\n  padding: 5px 15px;\n  margin-bottom: 15px;\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: background-color ${p => p.theme.animation},\n    box-shadow ${p => p.theme.animation};\n  &:hover {\n    background-color: ${p => p.theme.colors.secondary};\n    box-shadow: ${p => p.theme.shadows.normal};\n  }\n`;\n\nexport const MovieCard = styled.div`\n  display: flex;\n  gap: 20px;\n  font-family: ${p => p.theme.fonts.body};\n  padding: ${p => p.theme.space[4]}px;\n  background: ${p => p.theme.colors.background};\n  box-shadow: ${p => p.theme.shadows.normal};\n\n  border-radius: ${p => p.theme.radii.normal};\n`;\n\nexport const Text = styled.p`\n  font-family: ${p => p.theme.fonts.monospace};\n  font-size: ${p => p.theme.fontSizes.m};\n`;\n\nexport const ImageWrapper = styled.div`\n  width: 300px;\n  height: 450px;\n  flex-shrink: 0;\n`;\n\nexport const StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${p => p.theme.colors.white};\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  gap: 16px;\n\n  border-bottom: 1px solid ${p => p.theme.colors.secondary};\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n\nexport const LinkItem = styled.li`\n  background: ${p => p.theme.colors.primary};\n  padding: ${p => p.theme.space[3]}px ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal};\n\n  transition: background-color ${p => p.theme.animation},\n    box-shadow ${p => p.theme.animation};\n  &:hover {\n    background-color: ${p => p.theme.colors.secondary};\n    box-shadow: ${p => p.theme.shadows.normal};\n  }\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  MovieCard,\n  ImageWrapper,\n  Text,\n  Btn,\n  StyledLink,\n  LinkList,\n  LinkItem,\n} from './Movie.styled';\nimport { MainContainer } from 'utils/GlobalStyle';\n\nexport const Movie = ({ movie }) => {\n  const { title, release_date, overview, poster_path, vote_average, genres } =\n    movie;\n  const location = useLocation();\n  const navigation = useNavigate();\n  const onBtnClick = () => {\n    navigation(location?.state?.from ?? '/');\n  };\n\n  return (\n    <MainContainer>\n      <Btn type=\"button\" onClick={onBtnClick}>\n        Go back\n      </Btn>\n      <MovieCard>\n        <ImageWrapper>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n          />\n        </ImageWrapper>\n        <div>\n          <h2>\n            {title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <Text>User score: {Math.round(vote_average * 10)} %</Text>\n          <h3>Genres</h3>\n          <p>{genres.map(({ name }) => name).join(', ')}</p>\n          <h3>Overview</h3>\n          <Text>{overview}</Text>\n        </div>\n      </MovieCard>\n      <h3>Additional information</h3>\n      <LinkList>\n        <LinkItem>\n          <StyledLink to=\"cast\" state={location.state}>\n            Cast\n          </StyledLink>\n        </LinkItem>\n        <LinkItem>\n          <StyledLink to=\"reviews\" state={location.state}>\n            Reviews\n          </StyledLink>\n        </LinkItem>\n      </LinkList>\n    </MainContainer>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n};\n","import { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { useFetchMovieInfo } from 'hooks/useFetchMovieInfo';\n\nimport { Movie } from 'components/Movie/Movie';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MoviesDetailsPage = () => {\n  const { movieInfo, isLoading, error } = useFetchMovieInfo();\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movieInfo && <Movie movie={movieInfo} />}\n      {error && <p>Ooops!</p>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MoviesDetailsPage;\n"],"names":["useFetchMovieInfo","endpoint","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","error","setError","useParams","id","useEffect","getMovie","movieId","fetchMovieById","movieDetails","message","Btn","styled","p","theme","colors","white","primary","radii","normal","animation","secondary","shadows","MovieCard","fonts","body","space","background","Text","monospace","fontSizes","m","ImageWrapper","StyledLink","Link","LinkList","LinkItem","Movie","movie","title","release_date","overview","poster_path","vote_average","genres","location","useLocation","navigation","useNavigate","type","onClick","state","from","src","alt","Date","getFullYear","Math","round","map","name","join","to","Loader","Suspense","fallback"],"sourceRoot":""}